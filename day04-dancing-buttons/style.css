/* 基础样式和变量 */
:root {
  --bright-red: #ff5252;
  --bright-blue: #448aff;
  --bright-yellow: #ffca28;
  --dark-color: #2c3e50;
  --light-color: #ecf0f1;
  --transition-speed: 0.3s;
  --dancing-speed: 5s;
  --button-height: 50px;
  --button-width: 200px;
  --body-bg: #f5f5f5;
  --text-color: #333;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Arial', sans-serif;
  background-color: var(--body-bg);
  color: var(--text-color);
  line-height: 1.6;
  transition: background-color 0.5s ease;
}

.container {
  max-width: 900px;
  margin: 0 auto;
  padding: 2rem;
}

h1 {
  text-align: center;
  margin-bottom: 2rem;
  color: var(--dark-color);
}

h2 {
  margin-bottom: 1rem;
  color: var(--bright-blue);
}

.button-section {
  margin-bottom: 3rem;
  padding: 1.5rem;
  border-radius: 8px;
  background-color: white;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  position: relative;
  z-index: 1; /* 确保按钮容器有正确的层级 */
}

.button-description {
  margin-top: 1rem;
  color: #666;
  font-style: italic;
}

/* 基础按钮样式 */
.btn {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  padding: 0.75rem 1.5rem;
  border: none;
  border-radius: 4px;
  font-size: 1rem;
  font-weight: bold;
  cursor: pointer;
  transition: all var(--transition-speed) ease;
  position: relative;
  overflow: hidden;
  outline: none;
  min-width: var(--button-width);
  height: var(--button-height);
}

.btn:focus {
  box-shadow: 0 0 0 3px rgba(68, 138, 255, 0.3);
}

/* 1. 普通按钮 - 红色 */
.btn-normal {
  background-color: var(--bright-red);
  color: white;
  box-shadow: 0 4px 6px rgba(255, 82, 82, 0.3);
}

.btn-normal:hover {
  background-color: #ff3838;
  transform: translateY(-2px);
  box-shadow: 0 6px 8px rgba(255, 82, 82, 0.4);
}

.btn-normal:active {
  transform: translateY(1px);
  box-shadow: 0 2px 4px rgba(255, 82, 82, 0.3);
}

/* 2. 3D跳舞按钮 - 黄色 */
.btn-dancing {
  background-color: transparent;
  transform-style: preserve-3d;
  perspective: 1000px;
  transform: rotateX(0) rotateY(0);
  transition: transform 0.6s ease;
  width: var(--button-width);
  height: var(--button-height);
  position: relative;
  cursor: pointer;
}

.btn-face {
  position: absolute;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 4px;
  transition: all 0.3s ease;
  backface-visibility: hidden;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
}

.btn-face.front {
  background: linear-gradient(135deg, #ffca28, #ffd54f);
  color: #664500;
  transform: translateZ(25px);
}

.btn-face.back {
  background: linear-gradient(135deg, #ffb300, #ffca28);
  color: #664500;
  transform: rotateX(180deg) translateZ(25px);
}

.btn-face.top {
  background: linear-gradient(135deg, #ffd54f, #ffe082);
  color: #664500;
  transform: rotateX(90deg) translateZ(25px);
  height: 50px;
}

.btn-face.bottom {
  background: linear-gradient(135deg, #ffc107, #ffca28);
  color: #664500;
  transform: rotateX(-90deg) translateZ(25px);
  height: 50px;
}

.btn-face.left {
  background: linear-gradient(135deg, #ffb300, #ffc107);
  color: #664500;
  transform: rotateY(-90deg) translateZ(100px);
  width: 50px;
}

.btn-face.right {
  background: linear-gradient(135deg, #ffd54f, #ffe082);
  color: #664500;
  transform: rotateY(90deg) translateZ(100px);
  width: 50px;
}

.btn-dancing:hover {
  animation: complex-dance var(--dancing-speed) infinite ease-in-out;
  z-index: 10; /* 悬停时提高按钮层级，确保在动画过程中不被其他元素遮挡 */
}

@keyframes complex-dance {
  0% {
    transform: rotateX(0) rotateY(0) rotateZ(0);
  }
  10% {
    transform: rotateX(36deg) rotateY(45deg) scale(1.05);
  }
  20% {
    transform: rotateX(72deg) rotateY(90deg) scale(1.1) translateY(-10px);
  }
  30% {
    transform: rotateX(108deg) rotateY(135deg) scale(1.05) translateY(-5px);
  }
  40% {
    transform: rotateX(144deg) rotateY(180deg) scale(1) translateY(0);
  }
  50% {
    transform: rotateX(180deg) rotateY(225deg) scale(1.05) translateZ(20px);
  }
  60% {
    transform: rotateX(216deg) rotateY(270deg) scale(1.1) translateZ(10px);
  }
  70% {
    transform: rotateX(252deg) rotateY(315deg) scale(1.05) translateZ(5px);
  }
  80% {
    transform: rotateX(288deg) rotateY(360deg) scale(1) translateZ(0);
  }
  90% {
    transform: rotateX(324deg) rotateY(405deg) rotateZ(45deg);
  }
  100% {
    transform: rotateX(360deg) rotateY(360deg) rotateZ(0);
  }
}

/* 3. 逃跑按钮 - 蓝色 */
.escape-controls {
  margin-bottom: 15px;
  display: flex;
  align-items: center;
}

.escape-controls label {
  margin-right: 10px;
  font-weight: bold;
  color: #555;
}

.escape-range-select {
  padding: 8px 12px;
  border: 2px solid var(--bright-blue);
  border-radius: 4px;
  background-color: white;
  color: var(--dark-color);
  font-size: 0.9rem;
  cursor: pointer;
  outline: none;
  transition: all 0.2s ease;
}

.escape-range-select:hover {
  border-color: #2979ff;
}

.escape-range-select:focus {
  box-shadow: 0 0 0 3px rgba(68, 138, 255, 0.3);
}

.escape-container {
  position: relative;
  height: 200px;
  overflow: visible; /* 改为visible允许按钮跑出容器 */
  border: 2px dashed #ccc;
  border-radius: 8px;
  margin-bottom: 30px; /* 增加底部边距，给提示留出空间 */
}

.btn-escape {
  background: linear-gradient(135deg, #448aff, #82b1ff);
  color: white;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  transition: all 0.1s ease-out;
  z-index: 5;
  box-shadow: 0 4px 15px rgba(68, 138, 255, 0.5);
  font-weight: bold;
  border-radius: 8px;
}

.btn-escape:after {
  content: '🏃';
  margin-left: 8px;
  font-size: 1.2em;
}

.escape-hint {
  position: absolute;
  bottom: 10px;
  left: 0;
  right: 0;
  text-align: center;
  font-size: 0.9rem;
  color: #777;
  font-style: italic;
  padding: 5px;
  background-color: rgba(255, 255, 255, 0.8);
  border-radius: 4px;
}

/* 重置按钮 */
.btn-reset {
  background-color: var(--light-color);
  color: var(--dark-color);
  margin-top: 1rem;
}

.btn-reset:hover {
  background-color: #bdc3c7;
}

/* 响应式调整 */
@media (max-width: 768px) {
  .container {
    padding: 1rem;
  }
  
  .btn {
    min-width: 150px;
  }
  
  .button-section {
    padding: 1rem;
  }
}

/* 确保文字颜色在不同背景色下保持可读性 */
.dark-mode {
  color: white;
}

.light-mode {
  color: var(--dark-color);
}
